{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction detailPage(props) {\n  // const router = useRouter()\n  // const newsId = router.query.newsId\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      source: props.meetupData.image,\n      address: props.meetupData.address,\n      title: props.meetupData.title,\n      description: props.meetupData.description\n    })]\n  });\n}\n\nexport default detailPage;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://user_0:ffang2198@cluster0.1hgvdjv.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetsupCollection = db.collection('meetups'); // find give us access all the meetups\n  //secound param here is {_id: 1} we choose all the _id,only return id no ohter\n\n  const meetups = await meetsupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close;\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //     {\n    //         params: {\n    //             meetupId:'m1'\n    //         }\n    //     },\n    //     {\n    //         params: {\n    //             meetupId:'m2'\n    //         }\n    //     }\n    // ]\n\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  // in the getStaticProps , there's an context parameter's which can visit \n  //this params key will be a object where identifier between the suqare breacket will be property, and the value will be actual value\n  //that coded in URL , so here the params attribute is meetupId, because that is the identifier here in the square breacket \n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://user_0:ffang2198@cluster0.1hgvdjv.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetsupCollection = db.collection('meetups'); // find give us access all the meetups\n  // findOne find one single document\n\n  const selectedMeetup = await meetsupCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        address: selectedMeetup.address\n      }\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}